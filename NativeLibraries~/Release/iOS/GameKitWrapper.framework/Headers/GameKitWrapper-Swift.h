#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef GAMEKITWRAPPER_SWIFT_H
#define GAMEKITWRAPPER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import GameKit;
@import ObjectiveC;
#endif

#import <GameKitWrapper/GameKitWrapper.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GameKitWrapper",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_EXTERN GKWAccessPointFrameInScreenCoordinates GKAccessPoint_GetFrameInScreenCoordinates(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN GKWAccessPointFrameInScreenCoordinates GKAccessPoint_GetFrameInUnitCoordinates(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKAccessPoint_GetIsActive(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKAccessPoint_GetIsFocused(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKAccessPoint_GetIsPresentingGameCenter(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKAccessPoint_GetIsVisible(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKAccessPoint_GetLocation(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKAccessPoint_GetShared(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKAccessPoint_GetShowHighlights(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKAccessPoint_SetIsActive(void * _Nonnull pointer, BOOL value);


SWIFT_EXTERN void GKAccessPoint_SetLocation(void * _Nonnull pointer, NSInteger value);


SWIFT_EXTERN void GKAccessPoint_SetShowHighlights(void * _Nonnull pointer, BOOL value);


SWIFT_EXTERN void GKAccessPoint_Trigger(void * _Nonnull pointer);


SWIFT_EXTERN void GKAccessPoint_TriggerWithState(void * _Nonnull pointer, int64_t state);


SWIFT_EXTERN void * _Nullable GKAchievementChallenge_GetAchievement(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKAchievementDescription_GetAchievedDescription(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKAchievementDescription_GetGroupIdentifier(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKAchievementDescription_GetIdentifier(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKAchievementDescription_GetIncompleteAchievementImage(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKAchievementDescription_GetIsHidden(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKAchievementDescription_GetIsReplayable(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKAchievementDescription_GetMaximumPoints(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKAchievementDescription_GetPlaceholderCompletedAchievementImage(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN double GKAchievementDescription_GetRarityPercent(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKAchievementDescription_GetTitle(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKAchievementDescription_GetUnachievedDescription(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKAchievementDescription_LoadAchievementDescriptions(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKAchievementDescription_LoadImage(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onImageLoaded)(int64_t, void * _Nonnull), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKAchievement_ChallengeComposeController(void * _Nonnull pointer, int8_t * _Nonnull message, void * _Nonnull playersPtr);


SWIFT_EXTERN int8_t * _Nonnull GKAchievement_GetIdentifier(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKAchievement_GetIsCompleted(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKAchievement_GetLastReportedDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN float GKAchievement_GetPercentComplete(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKAchievement_GetPlayer(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKAchievement_GetShowCompletionBanner(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKAchievement_Init(int8_t * _Nonnull identifier) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKAchievement_InitForPlayer(int8_t * _Nonnull identifier, void * _Nonnull gkPlayerPtr) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKAchievement_LoadAchievements(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKAchievement_Report(int64_t taskId, void * _Nonnull pointer, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKAchievement_ResetAchievements(int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKAchievement_SelectChallengeablePlayers(void * _Nonnull pointer, int64_t taskId, void * _Nonnull playersPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKAchievement_SetIdentifier(void * _Nonnull pointer, int8_t * _Nonnull value);


SWIFT_EXTERN void GKAchievement_SetPercentComplete(void * _Nonnull pointer, float value);


SWIFT_EXTERN void GKAchievement_SetShowCompletionBanner(void * _Nonnull pointer, BOOL value);


SWIFT_EXTERN int8_t * _Nullable GKBasePlayer_GetDisplayName(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKChallenge_Decline(void * _Nonnull pointer);


SWIFT_EXTERN NSInteger GKChallenge_GetChallengeType(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKChallenge_GetCompletionDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKChallenge_GetIssueDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKChallenge_GetIssuingPlayer(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKChallenge_GetMessage(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKChallenge_GetReceivingPlayer(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKChallenge_GetState(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKChallenge_LoadReceivedChallenges(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKChallenge_SetChallengeCompletedCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKChallenge_SetChallengeOtherPlayerAcceptedCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKChallenge_SetChallengeOtherPlayerCompletedCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKChallenge_SetChallengeReceivedCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void * _Nonnull GKGameCenterViewController_InitWithAchievement(void * _Nonnull achievementPtr) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKGameCenterViewController_InitWithLeaderboard(void * _Nonnull leaderboardPtr, NSInteger playerScope, NSInteger timeScope) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKGameCenterViewController_InitWithState(NSInteger state) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKGameCenterViewController_Present(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t));


SWIFT_EXTERN BOOL GKInvite_GetIsHosted(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN uint32_t GKInvite_GetPlayerAttributes(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKInvite_GetPlayerGroup(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKInvite_GetSender(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKInvite_SetInviteAcceptedCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN NSInteger GKLeaderboardEntry_GetContext(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN double GKLeaderboardEntry_GetDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKLeaderboardEntry_GetFormattedScore(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKLeaderboardEntry_GetPlayer(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKLeaderboardEntry_GetRank(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKLeaderboardEntry_GetScore(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKLeaderboardSet_GetGroupIdentifier(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKLeaderboardSet_GetIdentifier(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKLeaderboardSet_GetTitle(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKLeaderboardSet_LoadImage(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onImageLoaded)(int64_t, void * _Nonnull), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLeaderboardSet_LoadLeaderboardSets(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLeaderboardSet_LoadLeaderboards(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN int8_t * _Nullable GKLeaderboard_GetBaseLeaderboardId(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKLeaderboard_GetDuration(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKLeaderboard_GetGroupIdentifier(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKLeaderboard_GetNextStartDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKLeaderboard_GetStartDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKLeaderboard_GetTitle(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKLeaderboard_GetType(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKLeaderboard_LoadEntries(void * _Nonnull pointer, int64_t taskId, NSInteger playerScope, NSInteger timeScope, NSInteger rankMin, NSInteger rankMax, void (* _Nonnull onSuccess)(int64_t, void * _Nullable, void * _Nullable, NSInteger), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLeaderboard_LoadEntriesForPlayers(void * _Nonnull gkLeaderboardPtr, int64_t taskId, void * _Nonnull playersPtr, NSInteger timeScope, void (* _Nonnull onSuccess)(int64_t, void * _Nullable, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLeaderboard_LoadImage(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onImageLoaded)(int64_t, void * _Nonnull), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLeaderboard_LoadLeaderboards(void * _Nullable pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLeaderboard_LoadPreviousOccurrence(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLeaderboard_SubmitScore(void * _Nonnull pointer, int64_t taskId, NSInteger score, NSInteger context, void * _Nonnull player, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLocalPlayer_Authenticate(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLocalPlayer_FetchItems(void * _Nonnull gkLocalPlayerPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, int8_t * _Nonnull, void * _Nonnull, void * _Nonnull, uint64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN BOOL GKLocalPlayer_GetIsAuthenticated(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKLocalPlayer_GetIsMultiplayerGamingRestricted(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKLocalPlayer_GetIsPersonalizedCommunicationRestricted(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKLocalPlayer_GetIsUnderage(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKLocalPlayer_GetLocal(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKLocalPlayer_LoadChallengableFriends(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLocalPlayer_LoadFriends(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLocalPlayer_LoadFriendsAuthorizationStatus(void * _Nonnull gkLocalPlayerPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, NSInteger), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLocalPlayer_LoadFriendsWithIdentifiers(void * _Nonnull gkLocalPlayerPtr, int64_t taskId, void * _Nonnull identifiersPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKLocalPlayer_LoadRecentPlayers(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKMatchDelegate_SetDataReceived(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, int32_t, void * _Nonnull));


SWIFT_EXTERN void GKMatchDelegate_SetDataReceivedForPlayer(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, int32_t, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKMatchDelegate_SetDidFailWithError(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKMatchDelegate_SetPlayerConnectedDidChange(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, GKPlayerConnectionState));


SWIFT_EXTERN void GKMatchDelegate_SetShouldReinviteDisconnectedPlayer(void * _Nonnull pointer, BOOL (* _Nonnull callback)(void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKMatchMaker_FindMatchedPlayers(void * _Nonnull gkMatchmakerPtr, int64_t taskId, void * _Nonnull gkMatchRequestPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN NSInteger GKMatchRequest_GetDefaultNumberOfPlayers(void * _Nonnull gkMatchRequestPtr) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKMatchRequest_GetInviteMessage(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKMatchRequest_GetMaxPlayers(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKMatchRequest_GetMaxPlayersAllowedForMatchOfType(NSUInteger matchType) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKMatchRequest_GetMinPlayers(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN uint32_t GKMatchRequest_GetPlayerAttributes(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKMatchRequest_GetPlayerGroup(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKMatchRequest_GetProperties(void * _Nonnull gkMatchRequestPtr) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKMatchRequest_GetQueueName(void * _Nonnull gkMatchRequestPtr) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKMatchRequest_GetRecipientProperties(void * _Nonnull gkMatchRequestPtr) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKMatchRequest_GetRecipients(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKMatchRequest_Init(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKMatchRequest_SetDefaultNumberOfPlayers(void * _Nonnull gkMatchRequestPtr, NSInteger value);


SWIFT_EXTERN void GKMatchRequest_SetInviteMessage(void * _Nonnull pointer, int8_t * _Nullable value);


SWIFT_EXTERN void GKMatchRequest_SetMaxPlayers(void * _Nonnull pointer, NSInteger value);


SWIFT_EXTERN void GKMatchRequest_SetMinPlayers(void * _Nonnull pointer, NSInteger value);


SWIFT_EXTERN void GKMatchRequest_SetPlayerAttributes(void * _Nonnull pointer, uint32_t value);


SWIFT_EXTERN void GKMatchRequest_SetPlayerGroup(void * _Nonnull pointer, NSInteger value);


SWIFT_EXTERN void GKMatchRequest_SetProperties(void * _Nonnull gkMatchRequestPtr, void * _Nullable nsDictionaryPtr);


SWIFT_EXTERN void GKMatchRequest_SetQueueName(void * _Nonnull gkMatchRequestPtr, int8_t * _Nullable value);


SWIFT_EXTERN void GKMatchRequest_SetRecipientProperties(void * _Nonnull gkMatchRequestPtr, void * _Nullable nsDictionaryPtr);


SWIFT_EXTERN void GKMatchRequest_SetRecipientResponseHandler(void * _Nonnull gkMatchRequestPtr, void (* _Nullable recipientResponseHandler)(void * _Nonnull, void * _Nonnull, NSInteger));


SWIFT_EXTERN void GKMatchRequest_SetRecipients(void * _Nonnull pointer, void * _Nullable value);


SWIFT_EXTERN void GKMatch_ChooseBestHostingPlayer(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKMatch_Disconnect(void * _Nonnull pointer);


SWIFT_EXTERN void * _Nullable GKMatch_GetDelegate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKMatch_GetExpectedPlayerCount(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKMatch_GetPlayerProperties(void * _Nonnull gkMatchPtr) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKMatch_GetPlayers(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKMatch_GetProperties(void * _Nonnull gkMatchPtr) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKMatch_Rematch(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void * _Nullable GKMatch_SendTo(void * _Nonnull pointer, InteropStructArray data, void * _Nonnull players, NSInteger sendMode) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKMatch_SendToAll(void * _Nonnull pointer, InteropStructArray data, NSInteger sendMode) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKMatch_VoiceChat(void * _Nonnull pointer, int8_t * _Nonnull channel) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_CallGetMatchPropertiesForRecipientCompletionHandler(void * _Nonnull completionHandlerWrapperPtr, void * _Nonnull nsDictionaryPtr);


SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetDidFailWithErrorCallback(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetDidFindHostedPlayersCallback(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetDidFindMatchCallback(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetGetMatchPropertiesForRecipientCallback(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetHostedPlayerDidAccept(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetMatchmakingCanceledCallback(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKMatchmakerViewController_AddPlayersToMatch(void * _Nonnull gkMatchmakerViewControllerPtr, void * _Nonnull gkMatchPtr);


SWIFT_EXTERN BOOL GKMatchmakerViewController_GetCanStartWithMinimumPlayers(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKMatchmakerViewController_GetIsHosted(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKMatchmakerViewController_GetMatchRequest(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKMatchmakerViewController_GetMatchmakerDelegate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKMatchmakerViewController_GetMatchmakingMode(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKMatchmakerViewController_InitWithInvite(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKMatchmakerViewController_InitWithMatchRequest(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKMatchmakerViewController_Present(void * _Nonnull pointer);


SWIFT_EXTERN void GKMatchmakerViewController_SetCanStartWithMinimumPlayers(void * _Nonnull pointer, BOOL value);


SWIFT_EXTERN void GKMatchmakerViewController_SetHostedPlayerDidConnect(void * _Nonnull gkMatchmakerViewControllerPtr, void * _Nonnull gkPlayerPtr, BOOL didConnect);


SWIFT_EXTERN void GKMatchmakerViewController_SetIsHosted(void * _Nonnull pointer, BOOL value);


SWIFT_EXTERN void GKMatchmakerViewController_SetMatchmakingMode(void * _Nonnull pointer, NSInteger value);


SWIFT_EXTERN void GKMatchmaker_AddPlayers(void * _Nonnull pointer, int64_t taskId, void * _Nonnull matchPtr, void * _Nonnull matchRequestPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKMatchmaker_Cancel(void * _Nonnull pointer);


SWIFT_EXTERN void GKMatchmaker_CancelPendingInvite(void * _Nonnull pointer, void * _Nonnull playerId);


SWIFT_EXTERN void GKMatchmaker_FindMatch(void * _Nonnull pointer, int64_t taskId, void * _Nonnull matchRequestPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKMatchmaker_FindPlayers(void * _Nonnull pointer, int64_t taskId, void * _Nonnull matchRequestPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKMatchmaker_FinishMatchmaking(void * _Nonnull gkMatchmakerPtr, void * _Nonnull gkMatchPtr);


SWIFT_EXTERN void * _Nonnull GKMatchmaker_GetShared(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKMatchmaker_MatchForInvite(void * _Nonnull pointer, int64_t taskId, void * _Nonnull invitePtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKMatchmaker_QueryActivity(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, NSInteger), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKMatchmaker_QueryPlayerGroupActivity(void * _Nonnull pointer, int64_t taskId, NSInteger groupId, void (* _Nonnull onSuccess)(int64_t, NSInteger), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKMatchmaker_QueryQueueActivity(void * _Nonnull gkMatchmakerPtr, int64_t taskId, int8_t * _Nonnull queueName, void (* _Nonnull onSuccess)(int64_t, NSInteger), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKMatchmaker_StartBrowsingForNearbyPlayers(void * _Nonnull gkMatchmakerPtr, void (* _Nonnull nearbyPlayerReachableHandler)(void * _Nonnull, void * _Nonnull, BOOL));


SWIFT_EXTERN void GKMatchmaker_StartGroupActivity(void * _Nonnull gkMatchmakerPtr, void (* _Nonnull groupActivityPlayerHandler)(void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKMatchmaker_StopBrowsingForNearbyPlayers(void * _Nonnull gkMatchmakerPtr);


SWIFT_EXTERN void GKMatchmaker_StopGroupActivity(void * _Nonnull gkMatchmakerPtr);


SWIFT_EXTERN void GKNotificationBanner_Show(int8_t * _Nonnull title, int8_t * _Nonnull message);


SWIFT_EXTERN void GKNotificationBanner_ShowWithDuration(int8_t * _Nonnull title, int8_t * _Nonnull message, double duration);


SWIFT_EXTERN void * _Nonnull GKPlayer_AnonymousGuestPlayer(int8_t * _Nonnull identifier) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKPlayer_GetAlias(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKPlayer_GetDisplayName(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKPlayer_GetGamePlayerId(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKPlayer_GetGuestIdentifier(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKPlayer_GetIsInvitable(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKPlayer_GetScopedIDsArePersistent(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKPlayer_GetScopedIdsArePersistent(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKPlayer_GetTeamPlayerId(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKPlayer_LoadPhoto(void * _Nonnull pointer, int64_t taskId, NSInteger photoSize, void (* _Nonnull onImageLoaded)(int64_t, void * _Nonnull), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void * _Nullable GKScoreChallenge_GetScore(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN InteropStructArray GKTurnBasedExchangeReply_GetData(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKTurnBasedExchangeReply_GetMessage(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKTurnBasedExchangeReply_GetRecipient(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedExchangeReply_GetReplyDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKTurnBasedExchange_Cancel(void * _Nonnull pointer, int64_t taskId, int8_t * _Nonnull localizableMessageKey, void * _Nonnull argumentsPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN NSInteger GKTurnBasedExchange_GetCompletionDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN InteropStructArray GKTurnBasedExchange_GetData(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKTurnBasedExchange_GetExchangeID(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKTurnBasedExchange_GetMessage(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKTurnBasedExchange_GetRecipients(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKTurnBasedExchange_GetReplies(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedExchange_GetSendDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKTurnBasedExchange_GetSender(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t GKTurnBasedExchange_GetStatus(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedExchange_GetTimeoutDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKTurnBasedExchange_Reply(void * _Nonnull pointer, int64_t taskId, int8_t * _Nonnull localizableMessageKey, void * _Nonnull argumentsPtr, InteropStructArray data, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_AcceptInvite(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_DeclineInvite(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_EndMatchInTurn(void * _Nonnull pointer, int64_t taskId, InteropStructArray data, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_EndTurn(void * _Nonnull pointer, int64_t taskId, void * _Nonnull participantsPtr, double timeout, InteropStructArray data, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_Find(int64_t taskId, void * _Nonnull matchRequestPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN double GKTurnBasedMatch_GKExchangeTimeoutDefault(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN double GKTurnBasedMatch_GKExchangeTimeoutNone(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKTurnBasedMatch_GetActiveExchanges(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKTurnBasedMatch_GetCompletedExchanges(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedMatch_GetCreationDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKTurnBasedMatch_GetCurrentParticipant(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedMatch_GetExchangeDataMaximumSize(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedMatch_GetExchangeMaxInitiatedExchangesPerPlayer(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKTurnBasedMatch_GetExchanges(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN InteropStructArray GKTurnBasedMatch_GetMatchData(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedMatch_GetMatchDataMaximumSize(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKTurnBasedMatch_GetMatchID(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nullable GKTurnBasedMatch_GetMessage(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKTurnBasedMatch_GetParticipants(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedMatch_GetStatus(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN double GKTurnBasedMatch_GetTurnTimeoutDefault(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN double GKTurnBasedMatch_GetTurnTimeoutNone(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKTurnBasedMatch_Load(int64_t taskId, int8_t * _Nonnull matchId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_LoadMatchData(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, InteropStructArray), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_LoadMatches(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_ParticipantQuitInTurn(void * _Nonnull pointer, int64_t taskId, NSInteger outcome, void * _Nonnull participantsPtr, double timeout, InteropStructArray data, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_ParticipantQuitOutOfTurn(void * _Nonnull pointer, int64_t taskId, NSInteger outcome, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_Rematch(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_Remove(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SaveCurrentTurn(void * _Nonnull pointer, int64_t taskId, InteropStructArray data, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SaveMergedMatch(void * _Nonnull pointer, int64_t taskId, InteropStructArray data, void * _Nonnull exchangesPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SendExchange(void * _Nonnull pointer, int64_t taskId, void * _Nonnull participantsPtr, InteropStructArray data, int8_t * _Nonnull localizableMessageKey, void * _Nonnull argumentsPtr, double timeout, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SendReminder(void * _Nonnull pointer, int64_t taskId, void * _Nonnull participantsPtr, int8_t * _Nonnull localizableMessageKey, void * _Nonnull argumentsPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SetExchangeCanceledCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SetExchangeCompletedCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SetExchangeReceivedCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SetLocalizableMessageWithKey(void * _Nonnull gkTurnBasedMatchPtr, int8_t * _Nonnull key, void * _Nullable argumentsPtr);


SWIFT_EXTERN void GKTurnBasedMatch_SetMatchEndedCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SetMatchRequestedWithOtherPlayersCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SetPlayerWantsToQuitMatchCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatch_SetTurnEventReceivedCallback(void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, BOOL));


SWIFT_EXTERN void GKTurnBasedMatchmakerViewControllerDelegate_SetDidFailWithErrorCallback(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatchmakerViewControllerDelegate_SetDidFindMatchCallback(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, void * _Nonnull));


SWIFT_EXTERN void GKTurnBasedMatchmakerViewControllerDelegate_SetMatchmakingCanceledCallback(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull));

@class GKTurnBasedMatchmakerViewController;

SWIFT_EXTERN void GKTurnBasedMatchmakerViewController_Dismiss(GKTurnBasedMatchmakerViewController * _Nonnull viewController);


SWIFT_EXTERN void * _Nonnull GKTurnBasedMatchmakerViewController_GetMatchmakerDelegate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedMatchmakerViewController_GetMatchmakingMode(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKTurnBasedMatchmakerViewController_GetShowExistingMatches(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKTurnBasedMatchmakerViewController_InitWithMatchRequest(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKTurnBasedMatchmakerViewController_Present(void * _Nonnull pointer);


SWIFT_EXTERN void GKTurnBasedMatchmakerViewController_SetMatchmakingMode(void * _Nonnull pointer, NSInteger value);


SWIFT_EXTERN void GKTurnBasedMatchmakerViewController_SetShowExistingMatches(void * _Nonnull pointer, BOOL value);


SWIFT_EXTERN NSInteger GKTurnBasedParticipant_GetLastTurnDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedParticipant_GetMatchOutcome(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nullable GKTurnBasedParticipant_GetPlayer(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedParticipant_GetStatus(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN NSInteger GKTurnBasedParticipant_GetTimeoutDate(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKTurnBasedParticipant_SetMatchOutcome(void * _Nonnull pointer, NSInteger value);


SWIFT_EXTERN BOOL GKVoiceChat_GetIsActive(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL GKVoiceChat_GetIsVoIPAllowed(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int8_t * _Nonnull GKVoiceChat_GetName(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void * _Nonnull GKVoiceChat_GetPlayers(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN float GKVoiceChat_GetVolume(void * _Nonnull pointer) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void GKVoiceChat_PlayerVoiceChatStateDidChangeHandler(void * _Nonnull pointer, void (* _Nonnull callback)(void * _Nonnull, void * _Nonnull, GKVoiceChatPlayerState));


SWIFT_EXTERN void GKVoiceChat_SetIsActive(void * _Nonnull pointer, BOOL value);


SWIFT_EXTERN void GKVoiceChat_SetPlayer(void * _Nonnull pointer, void * _Nonnull playerPtr, BOOL isMuted);


SWIFT_EXTERN void GKVoiceChat_SetVolume(void * _Nonnull pointer, float value);


SWIFT_EXTERN void GKVoiceChat_Start(void * _Nonnull pointer);


SWIFT_EXTERN void GKVoiceChat_Stop(void * _Nonnull pointer);


SWIFT_CLASS("_TtC14GameKitWrapper22GKWLocalPlayerListener")
@interface GKWLocalPlayerListener : NSObject <GKLocalPlayerListener>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GKPlayer;
@class GKInvite;

@interface GKWLocalPlayerListener (SWIFT_EXTENSION(GameKitWrapper)) <GKInviteEventListener>
- (void)player:(GKPlayer * _Nonnull)player didAcceptInvite:(GKInvite * _Nonnull)invite;
@end

@class GKChallenge;

@interface GKWLocalPlayerListener (SWIFT_EXTENSION(GameKitWrapper)) <GKChallengeListener>
- (void)player:(GKPlayer * _Nonnull)player didReceiveChallenge:(GKChallenge * _Nonnull)challenge;
- (void)player:(GKPlayer * _Nonnull)player wantsToPlayChallenge:(GKChallenge * _Nonnull)challenge;
- (void)player:(GKPlayer * _Nonnull)player didCompleteChallenge:(GKChallenge * _Nonnull)challenge issuedByFriend:(GKPlayer * _Nonnull)friendPlayer;
- (void)player:(GKPlayer * _Nonnull)player issuedChallengeWasCompleted:(GKChallenge * _Nonnull)challenge byFriend:(GKPlayer * _Nonnull)friendPlayer;
@end

@class GKTurnBasedExchange;
@class GKTurnBasedMatch;
@class GKTurnBasedExchangeReply;

@interface GKWLocalPlayerListener (SWIFT_EXTENSION(GameKitWrapper)) <GKTurnBasedEventListener>
- (void)player:(GKPlayer * _Nonnull)player receivedExchangeRequest:(GKTurnBasedExchange * _Nonnull)exchange forMatch:(GKTurnBasedMatch * _Nonnull)match;
- (void)player:(GKPlayer * _Nonnull)player receivedExchangeCancellation:(GKTurnBasedExchange * _Nonnull)exchange forMatch:(GKTurnBasedMatch * _Nonnull)match;
- (void)player:(GKPlayer * _Nonnull)player receivedExchangeReplies:(NSArray<GKTurnBasedExchangeReply *> * _Nonnull)replies forCompletedExchange:(GKTurnBasedExchange * _Nonnull)exchange forMatch:(GKTurnBasedMatch * _Nonnull)match;
- (void)player:(GKPlayer * _Nonnull)player didRequestMatchWithRecipients:(NSArray<GKPlayer *> * _Nonnull)recipientPlayers;
- (void)player:(GKPlayer * _Nonnull)player matchEnded:(GKTurnBasedMatch * _Nonnull)match;
- (void)player:(GKPlayer * _Nonnull)player receivedTurnEventForMatch:(GKTurnBasedMatch * _Nonnull)match didBecomeActive:(BOOL)didBecomeActive;
- (void)player:(GKPlayer * _Nonnull)player wantsToQuitMatch:(GKTurnBasedMatch * _Nonnull)match;
@end

@class GKMatch;
@class NSData;

SWIFT_CLASS("_TtC14GameKitWrapper16GKWMatchDelegate")
@interface GKWMatchDelegate : NSObject <GKMatchDelegate>
- (void)match:(GKMatch * _Nonnull)match didReceiveData:(NSData * _Nonnull)data fromRemotePlayer:(GKPlayer * _Nonnull)player;
- (void)match:(GKMatch * _Nonnull)match didReceiveData:(NSData * _Nonnull)data forRecipient:(GKPlayer * _Nonnull)recipient fromRemotePlayer:(GKPlayer * _Nonnull)player;
- (void)match:(GKMatch * _Nonnull)match player:(GKPlayer * _Nonnull)player didChangeConnectionState:(GKPlayerConnectionState)state;
- (BOOL)match:(GKMatch * _Nonnull)match shouldReinviteDisconnectedPlayer:(GKPlayer * _Nonnull)player SWIFT_WARN_UNUSED_RESULT;
- (void)match:(GKMatch * _Nonnull)match didFailWithError:(NSError * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GKMatchmakerViewController;
@class NSString;

SWIFT_CLASS("_TtC14GameKitWrapper35GKWMatchmakerViewControllerDelegate")
@interface GKWMatchmakerViewControllerDelegate : NSObject <GKMatchmakerViewControllerDelegate>
- (void)matchmakerViewControllerWasCancelled:(GKMatchmakerViewController * _Nonnull)viewController;
- (void)matchmakerViewController:(GKMatchmakerViewController * _Nonnull)viewController didFailWithError:(NSError * _Nonnull)error;
- (void)matchmakerViewController:(GKMatchmakerViewController * _Nonnull)viewController didFindMatch:(GKMatch * _Nonnull)match;
- (void)matchmakerViewController:(GKMatchmakerViewController * _Nonnull)viewController hostedPlayerDidAccept:(GKPlayer * _Nonnull)player;
- (void)matchmakerViewController:(GKMatchmakerViewController * _Nonnull)viewController didFindHostedPlayers:(NSArray<GKPlayer *> * _Nonnull)players;
- (void)matchmakerViewController:(GKMatchmakerViewController * _Nonnull)viewController getMatchPropertiesForRecipient:(GKPlayer * _Nonnull)recipient withCompletionHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC14GameKitWrapper44GKWTurnBasedMatchmakerViewControllerDelegate")
@interface GKWTurnBasedMatchmakerViewControllerDelegate : NSObject <GKTurnBasedMatchmakerViewControllerDelegate>
- (void)turnBasedMatchmakerViewControllerWasCancelled:(GKTurnBasedMatchmakerViewController * _Nonnull)viewController;
- (void)turnBasedMatchmakerViewController:(GKTurnBasedMatchmakerViewController * _Nonnull)viewController didFailWithError:(NSError * _Nonnull)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC14GameKitWrapper24GameKitUIDelegateHandler")
@interface GameKitUIDelegateHandler : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class GKGameCenterViewController;

@interface GameKitUIDelegateHandler (SWIFT_EXTENSION(GameKitWrapper)) <GKGameCenterControllerDelegate>
- (void)gameCenterViewControllerDidFinish:(GKGameCenterViewController * _Nonnull)gameCenterViewController;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
